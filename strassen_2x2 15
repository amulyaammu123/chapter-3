def strassen_2x2(A, B):
    # Extract elements of matrices A and B
    a, b, c, d = A[0][0], A[0][1], A[1][0], A[1][1]
    e, f, g, h = B[0][0], B[0][1], B[1][0], B[1][1]
    
    # Compute p1 to p7
    p1 = a * (f - h)
    p2 = (a + b) * h
    p3 = (c + d) * e
    p4 = d * (g - e)
    p5 = (a + d) * (e + h)
    p6 = (b - d) * (g + h)
    p7 = (a - c) * (e + f)
    
    # Compute elements of the resulting matrix C
    C11 = p1 + p4 - p5 + p7
    C12 = p3 + p5
    C21 = p2 + p4
    C22 = p1 + p3 - p2 + p6
    
    # Construct the resulting matrix C
    C = [[C11, C12], [C21, C22]]
    return C

# Test Case 1
A = [[1, 7], [3, 5]]
B = [[6, 8], [4, 2]]

# Compute the product matrix C using Strassen's algorithm
C = strassen_2x2(A, B)

print("Matrix A:")
for row in A:
    print(row)
    
print("\nMatrix B:")
for row in B:
    print(row)
    
print("\nMatrix C (Product of A and B):")
for row in C:
    print(row)
